{"version":3,"sources":["random_quote/core.cljs"],"mappings":";AAKA,GAAA,QAAAA,yCAAAC,8CAAAC;AAAA;AAAA,AAAA,AAASC,8BAAU,gDAAA,2CAAA,sDAAA,cAAA,yDAAA,xNAACC;;AAGpB,qCAAA,rCAAMC,kFAAaC;AAAnB,AACE,0DAAA,kFAAA,2CAAA,hLAACC,2OACW,WAAKC;AAAL,AACE,yEAAA,zEAACC,mDAAMH,MAAMI,sEAAY,iDAAA,jDAACC,4CAAIH;;AAC9B,gFAAA,zEAACC,mDAAMH,MAAMI,yEAAc,iDAAA,jDAACC,4CAAIH;GAH9C,uEAIkB,WAAAI;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAF,4CAAAE,eAAA,pEAAaE;kBAAb,AAAAJ,4CAAAE,eAAA,zEAAoBG;AAApB,AACE,OAACC,YAAeF,OAAOC;;;AAE7C,+BAAA,/BAAME,sEAAYZ;AAAlB,AACE,QAAA,iNAAA,7GAA6D,AAAA,oFAAA,AAAAa,gBAAQb,2DAAa,AAAA,uFAAA,AAAAa,gBAAUb;;AAI9F,0BAAA,1BAAMc,4DAAOd;AAAb,AAAA,0FAAA,mDAAA,mFAAA,kDAAA,iCAAA,mFAAA,gEAAA,mFAAA,mFAAA,mFAAA,+LAAA,mFAAA,uMAAA,mFAAA,+EAAA,mFAAA,gDAAA,2CAAA,yFAAA,wDAAA,iBAAA,gBAAA,mFAAA,yDAAA,2CAAA,6DAAA,poCAKsB,AAAA,oFAAA,AAAAa,gBAAQb,2KACT,AAAA,uFAAA,AAAAa,gBAAUb,6ZAGhB,AAACY,6BAAWZ;AAT3B,AAWyB,OAACD,mCAAYC;WAXtC;;AAcA,0BAAA,1BAAMe;AAAN,AACE,IAAAC,WAAA,mFAA2BF,wBAAMjB;IAAjCoB,WAC0B,wBAAA,xBAAGE;AAD7B,AAAA,kIAAAH,SAAAC,oDAAAD,SAAAC,hMAACC,8DAAAA,iFAAAA;;AAGH,yBAAA,zBAAeE;AAAf,AAIE,OAACL;;;AAEH,yBAAA,zBAAMM;AAAN,AAGE,mBAAA,ZAACV","names":["js/random-quote","js/random-quote.core","js/random-quote.core.app-state","random-quote.core/app-state","reagent.core.atom","random-quote.core/fetch-link!","state","ajax.core.GET","data","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.get","p__33820","map__33821","cljs.core/--destructure-map","status","status-text","js/console.log","random-quote.core/tweet-link","cljs.core/deref","random-quote.core/quote","random-quote.core/start","G__33822","G__33823","reagent.core/render-component","js/document","random-quote.core/init","random-quote.core/stop"],"sourcesContent":["(ns random-quote.core\n  (:require [ajax.core :refer [GET]]\n   [reagent.core :as reagent :refer [atom]]))\n\n;; define your app data so that it doesn't get over-written on reload\n(defonce app-state (atom {:text \"Helo world!\"\n                          :author \"Erasmo Jr.\"}))\n\n(defn fetch-link! [state]\n  (GET \"http://api.quotable.io/random\" \n    {:handler (fn [data]\n                (swap! state assoc :text (get data \"content\"))\n                (swap! state assoc :author (get data \"author\")))\n     :error-handler (fn [{:keys [status status-text]}]\n                      (js/console.log status status-text))}))\n\n(defn tweet-link [state]\n  (str \"https://twitter.com/intent/tweet?hashtags=quote&text=\" (:text @state) \" - \" (:author @state))\n  \n  )\n\n(defn quote [state]\n  [:div\n  [:h1 \"Random Quote Generator\"]\n  [:div.quote\n   [:div.quote-container\n    [:p.quote-content (:text @state)]\n    [:p.quote-author (:author @state)]]\n   \n   [:div.quote-buttons\n    [:a {:href (tweet-link state)\n         :target \"_blank\"} \"tweet\"]\n    [:button {:on-click #(fetch-link! state)} \"next quote\"]]]]\n  )\n\n(defn start []\n  (reagent/render-component [quote app-state]\n                            (. js/document (getElementById \"app\"))))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (start))\n\n(defn stop []\n  ;; stop is called before any code is reloaded\n  ;; this is controlled by :before-load in the config\n  (js/console.log \"stop\"))\n"]}